@mixin noselect {
  user-select: none;
  -moz-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  -o-user-select: none;
}

@mixin status {
  color: $color-dark;
  font-weight: normal;
  border: none;
  padding: 4px;
  font-size: 12px;

  .status-inner {
    padding: 0 2px;
    border-radius: 5px;
  }

  &.complete {
    color: $status-color-complete;
    border: $status-border-complete;
    // Both background-color and background are included to allow the
    // use of patterns.
    background-color: $status-backgroundColor-complete;
    background: $status-backgroundColor-complete;
    .status-inner {
      background-color: $status-backgroundColor-inner-complete;
      background: $status-backgroundColor-inner-complete;
    }
  }
  &.inprogress{
    color: $status-color-inprogress;
    border: $status-border-inprogress;
    background-color: $status-backgroundColor-inprogress;
    background: $status-backgroundColor-inprogress;
    .status-inner {
      background-color: $status-backgroundColor-inner-inprogress;
      background: $status-backgroundColor-inner-inprogress;
    }
  }
  &.notstarted {
    color: $status-color-notstarted;
    border: $status-border-notstarted;
    background-color: $status-backgroundColor-notstarted;
    background: $status-backgroundColor-notstarted;
    .status-inner {
      background-color: $status-backgroundColor-inner-notstarted;
      background: $status-backgroundColor-inner-notstarted;
    }
  }
  &.notapplicable {
    color: $status-color-notapplicable;
    border: $status-border-notapplicable;
    background-color: $status-backgroundColor-notapplicable;
    background: $status-backgroundColor-notapplicable;
    .status-inner {
      background-color: $status-backgroundColor-inner-notapplicable;
      background: $status-backgroundColor-inner-notapplicable;
    }
  }
}

@mixin statusHighContrast {
  &.complete {
    border: $status-border-complete-highContrast;
    background-color: $status-backgroundColor-complete-highContrast;
    background: $status-backgroundColor-complete-highContrast;
    color: $status-color-complete-highContrast !important;
    .status-inner {
      background-color: $status-backgroundColor-inner-complete-highContrast !important;
      background: $status-backgroundColor-inner-complete-highContrast !important;
      color: $status-color-complete-highContrast !important;
    }
  }
  &.inprogress{
    border: $status-border-inprogress-highContrast;
    background-color: $status-backgroundColor-inprogress-highContrast;
    background: $status-backgroundColor-inprogress-highContrast;
    color: $status-color-inprogress-highContrast;
    .status-inner {
      background-color: $status-backgroundColor-inner-inprogress-highContrast !important;
      background: $status-backgroundColor-inner-inprogress-highContrast !important;
      color: $status-color-inprogress-highContrast;
    }
  }
  &.notstarted {
    border: $status-border-notstarted-highContrast;
    background-color: $status-backgroundColor-notstarted-highContrast;
    background: $status-backgroundColor-notstarted-highContrast;
    color: $status-color-notstarted-highContrast !important;
    .status-inner {
      background-color: $status-backgroundColor-inner-notstarted-highContrast !important;
      background: $status-backgroundColor-inner-notstarted-highContrast !important;
      color: $status-color-notstarted-highContrast !important;
    }
  }
  &.notapplicable {
    border: $status-border-notapplicable-highContrast;
    background-color: $status-backgroundColor-notapplicable-highContrast;
    background: $status-backgroundColor-notapplicable-highContrast;
    color: $status-color-notapplicable-highContrast !important;
    .status-inner {
      background-color: $status-backgroundColor-inner-notapplicable-highContrast !important;
      background: $status-backgroundColor-inner-notapplicable-highContrast !important;
      color: $status-color-notapplicable-highContrast !important;
    }
  }
}

@mixin tags {
  .tag {
    @include status;
    margin-right: 6px;
    color: $tag-color;
    border: $tag-border;
    background: $tag-backgroundColor;
    white-space: nowrap;
    a {
      color: $tag-color;
      text-decoration: underline;
    }
  }
}

@mixin postCategories {
  padding-left: 0;
  list-style-type: none;
  li {
    display: inline-block;
    &:after {
      content: ',';
      padding-right: 1ch;
    }
    &:last-child:after {
      content: '';
      padding-right: 0;
    }
  }
}

@mixin postCategoriesHighContrast {
  @include postCategories;
}

@mixin indicatorcards {
  .indicator-cards {
    a {
      padding: 1rem;
      display: inline-block;
      -webkit-transition: background 0.3s;
      transition: background 0.3s;
      height: 100%;
      width: 100%;
      &:hover {
        background: transparent;
      }
    }

    .indicator-card-number,
    // @deprecated start
    span:not(.tags):not(.tag):not(.sr-only):not(.status-inner) {
    // @deprecated end (use .indicator-card-number instead)
      display: block;
      margin-bottom: 0.5rem;
      font-weight: bold;
      border-bottom-width: 2px;
      border-bottom-style: solid;
      position: relative;
      padding: 5px 0;

      &.status {
        @include status;
        position: absolute;
        top: -1px;
        right: 0;
        display: inline;
      }

    }

    .tags {
      @include tags;
    }

    .match {
      display: inline;
      font-weight: normal;
      border-bottom: none;
    }
  }
}

@mixin indicatorcardsHighContrast {
  .indicator-cards {
    .indicator-card-number,
    // @deprecated start
    span:not(.tags):not(.tag):not(.sr-only):not(.status-inner) {
    // @deprecated end (use .indicator-card-number instead)

      &.status {
        @include statusHighContrast;
      }
    }
  }
}

@mixin focus {
  color: $focusColor !important;
  outline: 3px solid transparent !important;
  background-color: $focusBackgroundColor !important;
  outline-offset: 0 !important;
  box-shadow: 0 -2px $focusOutlineColor,0 4px $focusColor !important;
  text-decoration: none !important;
}

@mixin focusOutlineOnly {
  background-color: $backgroundColor !important;
  box-shadow: none !important;
  outline: 3px solid $focusOutlineColor !important;
}

@mixin focusHighContrast {
  color: $focusColor-highContrast !important;
  background-color: $focusBackgroundColor-highContrast !important;
  box-shadow: 0 -2px $focusOutlineColor-highContrast,0 4px $focusColor-highContrast !important;
}

@mixin focusOutlineOnlyHighContrast {
  background-color: $color-dark-highContrast !important;
  box-shadow: none !important;
  outline: 3px solid $focusOutlineColor-highContrast !important;
  color: $text-color-highContrast !important;
}

@mixin preserveOriginalColors {
  @media (-ms-high-contrast: active), (forced-colors: active) {
    -ms-high-contrast-adjust: none;
    forced-color-adjust: none;
  }
}

@mixin screenreaderOnly {
  // Better to use the sr-only class, but this is
  // here as a last resort.
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

@mixin searchBar {
  clear: both;
  float: right;
  margin-bottom: 20px;
  @media only screen and (max-width: 768px) {
    margin-bottom: 0;
  }

  form {
    margin-top: 5px;
  }

  input {
    padding: 5px;
    width: 300px;
    width: 33ch;
    height: 34px;
    font-size: $searchBar-input-fontSize;
    border: 1.25px solid $text-color;
    border-radius: 0;
    display: inline-block;
    vertical-align: middle;
    position: relative;
    z-index: 0;
    &:focus {
      z-index: 1;
    }
  }

  button {
    height: 34px;
    color: $button-foregroundColor;
    font-size: 1.40em;
    line-height: 1em;
    background-color: $button-color;
    border: 1.25px solid $button-color;
    border-radius: 0;
    display: inline-block;
    vertical-align: middle;
    position: relative;
    z-index: 0;
    &:focus {
      color: $button-foregroundColor !important;
      background-color: $button-color !important;
      box-shadow: none !important;
      outline: 3px solid $focusOutlineColor !important;
      z-index: 1;
    }
  }
  // @deprecated start
  form > label > span {
    @include screenreaderOnly;
  }
  // @deprecated end
}

@mixin searchBarHighContrast {
  input {
    color: $color-dark-highContrast;
  }
  button {
    &, &:focus {
      background-color: $button-color-highContrast !important;
      color: $button-foregroundColor-highContrast !important;
      border-color: $button-foregroundColor-highContrast !important;
    }
    &:hover {
      background-color: $button-color-hover-highContrast !important;
    }
  }
}

@mixin dropdownToggle {
  margin: 0 0 2px 15px;
  padding: 2px;
  border: none;
  border-radius: 0;
  font-size: 16px;
  border-bottom: 2px solid transparent;
  color: $menu-link-color;
  &:hover {
    background: none;
    border-bottom: 2px solid $menu-link-borderBottomColor-hover;
  }
}

@mixin dropdownToggleHighContrast {
  color: $color-light-highContrast !important;
  background: $color-dark-highContrast !important;
  &:hover {
    color: $color-highlight-highContrast !important;
    background: $color-dark-highContrast !important;
  }
  &:focus {
    background: $focusBackgroundColor-highContrast !important;
    color: $focusColor-highContrast !important;
  }
}

@mixin dropdownMenu {
  border-radius: 0;
  a {
    color: $menu-dropdownLink-color;
  }
  .active {
    a {
      background: none;
      color: $menu-dropdownLink-color;
      &:hover {
        background: $menu-dropdownLink-backgroundColor-hover;
      }
    }
  }
}

@mixin dropdownMenuHighContrast {
  li {
    a {
      color: $color-dark-highContrast;
      &:hover {
        text-decoration: underline;
      }
    }
  }
}
